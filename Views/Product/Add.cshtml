@model Product

@{
    ViewData["Title"] = "Add Product";
}

<div class="text-center">
    <h1 class="display-4">Add a New Product</h1>
</div>

<form method="post" class="needs-validation" novalidate>
    <div class="form-group">
        <label class="col-sm-2 col-form-label" asp-for="Title"></label>
        <div class="col-sm-10">
            <input class="form-control" asp-for="Title" required>
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">
                Title is required!
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 col-form-label" asp-for="Price"></label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="validationCustom01" asp-for="Price" required>
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">
                Price is required!
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 col-form-label" asp-for="Category"></label>
        <div class="col-sm-10">
            <input class="form-control" asp-for="Category" required>
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">
                Category is required!
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Add Product</button>
</form>

<script>
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function() {
  'use strict';
  window.addEventListener('load', function() {
    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.getElementsByClassName('needs-validation');
    // Loop over them and prevent submission
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();
</script>